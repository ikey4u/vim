---
Title: vim 配置手册 by bugnofree
Date: 2019-01-15
Author: bugnofree
---

# 手册中各文件说明

- manual.txt: 本手册, 对手册的说明.
- 安装手册
    - install-overview.txt: 安装综述
    - install-linux.txt: linux 下的安装手册
    - install-mac.txt: mac 下的安装手册
    - install-windows.txt: windows 下的安装手册
    - options.txt: 安装后的配置选项
- about.txt: 关于 vim 自己的感受
- cmd.txt: vim 常用命令的解释
- script.txt: vim 脚本编程
- symbols.txt: vim 常用符号
- ycm.txt: 自动补全 ycm 的配置
- plugin.txt: 插件配置以及使用手册

# 安装步骤

安装参见 install-overview.txt 或者 @[http://ahageek.com/writer/special/vim/install-overview/]

# 功能一览

- `\r` 快速打开或刷新树形浏览器

- `<leader>man` 快速打开 `$HOME/.vim/manual.txt`, 即本手册

- `<leader>'` 和 `<leader>''` 分别给当前单词加上单双引号

- `<leader>ev` 和 `<leader>sv` 分别用于打开配置文件和重载配置文件

- 自动监视 vimrc 以及 settings 目录下配置文件的更改, 并自动更新 vimrc.

- 大文件优化打开, 超过 10 M 的文件自动启用大文件打开功能.

    对于 json 类文件, 格式化后打开更快捷, 如果未格式化, 则所有内容都在一行显示,
    则打开十分缓慢,因为 vim 要分析其结构.

- 修改窗口尺寸

    - <leader>= 横向 +5
    - <leader>- 横向 -5
    - <leader>==  纵向 +15
    - <leader>--  纵向 -15

- 清楚 ^M 符号

    正常模式下输入 cM 命令即可

- 时间助手

    - <F3> 插入模式或者正常模式下插入年月日格式时间, 比如 2019-03-25
    - <S-F3> 插入模式或正常模式插入年月日时分秒格式时间, 如 2019-03-25 11:09:56

- 会话保存

    Ex 模式下输入 `:call MKS()` 即可保存会话, 保存到 `$HOME/ss.vim`,
    使用 `gvim -S $HOME/ss.vim` 即可打开.

- 标点符号转换

    - 中文标点符号转英文 `:call CNmark2ENmark()`
    - 英文标点符号转中文 `:call ENmark2CNmark()`

- 清除行尾空格

    正常模式下输入 cS 命令即可.

- `:Tabmsg <cmd>` 在新的 tab 中捕获命令 `cmd` 的输出

- `:Recent` 在新的 tab 中打开最近文件列表,
    可以到该文件列表定位到所需文件后,按下 gf 即可打开文件.

- `:FmtUU` 一键将文件格式置为 unix, 编码方式为 utf-8

- `:FmtJSON` 一键将杂乱的 JSON 文件格式化.

- `<C-F11>` 切换菜单栏

- insert 模式下按 `jk` 进入 normal 模式

- pdf 转换插件

    提供一个将 vim 里面的内容高亮转换为 pdf 的插件,
    位于 plugin 目录需要安装 wkhtmltopdf,
    下载地址 https://wkhtmltopdf.org/downloads.html.

    如果安装到系统目录,则不需要任何设置,安装到其他地方,
    则需要设置变量 `g:html2pdf_exepath` 的值, 指定路径,
    需要时绝对路径.

    转换命令 `:TOpdf`, 生成的文件名为 `PDF@xxx.pdf`,
    xxx 为你当前转换的文件名称, 保存路径为当前路径.

- 实时预览 html

    安装 browser-sync 来同步预览 html

        brew install npm
        npm install -g browser-sync

    下载地址 @[https://github.com/BrowserSync/browser-sync],
    编写一个脚本 livehtml 存放到系统路径中, 脚本内容如下:

        browser-sync start --server --files "css/*.css, *.html

    调用方法 `:call Pre()`, 杀死进程 `:call KillPre()`.

- 代码高亮到网页

    vim 自带了一个 TOhtml 命令,但是它生成的是一个完整的网页,所以在此命令基础上,
    我编写了一个插件,让其生成一个单独的 div并将其内容放置到 0 号寄存器中,
    插件位于 `~/.vim/plugin/code.vim`, 依赖 bs4 python 包,
    使用 `pip3 install bs4` 即可对于指定文件, 执行 `:TOCode` 即可.
    然后使用 `"0p` 粘贴.

    代码边框样式我修改为了圆角边框,感觉好看点,
    也可以使用可是模式选择指定行转换为高亮删除单词

- 切换颜色主题

    通过 :SetColor <colorname>.<light|dark> 来设置颜色主题.
    比如 :SetColor cosmic_latte.light 来设置高亮颜色.

    如果不指定参数, 则会打印支持的颜色主题. 样例输出如下

        Usage: SetColor <colorname>.<light|dark>
        Available color schemes:
            desert.dark
            diokai.dark
            dracula.dark
            perun.dark
            rupza.dark
            evening.dark
            fruchtig.light
            cosmic_latte.<dark|light>

    你也可以仅仅传入一个参数, 此时将基于当前的背景色,
    设置颜色主题, 如果有的颜色主题不支持当前背景色,
    那么结果将可能十分丑.

- 快速设置字体

    normal 模式下使用 <leader>font 即可打开字体设置窗口,
    可以快速调整当前字体大小和样式.

- snippets

    - data\i 插入日期, 类似于 `2019-04-19`
    - time\i 插入时间, 类似于 `10:51`
    - datetime\i 插入时间日期, 类似于 `2019-04-19 10:51`
